name: Java CI with Gradle

on:
  push:
    branches:
      - feature/etc
  pull_request:
    branches:
      - feature/etc

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION_INFO }}" > ./application.properties
        shell: bash

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Web Docker Build and Push
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

          # Gradle 빌드에서 생성된 JAR 파일을 Docker 이미지로 복사
          cp -n build/libs/*.jar app.jar

          # application.properties 파일도 Docker 이미지로 복사
          if [ ! -f ./src/main/resources/application.properties ]; then
            cp ./src/main/resources/application.properties ./src/main/resources/application.properties
          fi

          # Remove the image if it exists
          docker image rm -f ${{ secrets.DOCKER_REPO }} || true

          # Docker 이미지 빌드 및 태그
          docker build -t ${{ secrets.DOCKER_REPO }} .

          # Docker 이미지에 latest 태그 추가
          docker tag ${{ secrets.DOCKER_REPO }}:latest ${{ secrets.DOCKER_REPO }}:latest

          # Docker 이미지를 Docker Hub에 푸시
          docker push ${{ secrets.DOCKER_REPO }}:latest

      - name: Add EC2 Host Key
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan -t rsa ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Copy Docker Compose to EC2
        run: |
          echo "${{ secrets.KEY }}" > key.pem
          chmod 600 key.pem
          scp -i key.pem ./src/main/resources/docker-compose.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.HOST }}:~/docker-compose.yml

      - name: Execute Docker Compose on EC2
        run: |
          ssh -i key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.HOST }} "docker-compose -f ~/docker-compose.yml up -d"
